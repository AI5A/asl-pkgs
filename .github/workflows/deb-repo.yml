---
name: Generate deb repo
on:
  push:
  workflow_dispatch:

jobs:
  deb:
    name: Generate Debian repository
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          - codename: bullseye
            arch: armhf
            sleep: 0
          - codename: buster
            arch: armhf
            sleep: 20
    steps:
      - uses: actions/checkout@v2

      - name: Grab asl-dahdi-${{ matrix.codename }} artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: build.yml
          workflow_conclusion: success
          branch: fixes
          name: asl-dahdi-${{ matrix.codename }}
          repo: AI5A/asl-dahdi
          path: dahdi

      - name: Grab asterisk-${{ matrix.codename }} artifacts
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow: asl-build.yml
          workflow_conclusion: success
          branch: fixes
          name: allstarlink-${{ matrix.codename }}
          repo: AI5A/asl
          path: asl

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@v5
        with:
          gpg_private_key: ${{ secrets.GPG_SECRET_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}

      - name: Put files in place
        run: |
          repo="$(pwd)"
          sudo apt-get install -y gcc dpkg-dev gpg
          mkdir -p asl-pkgs/deb/pool/main
          pushd asl-pkgs/deb
            mv ../../dahdi/* ../../asl/* pool/main/
            mkdir -p dists/${{ matrix.codename }}/main/binary-${{ matrix.arch }}
            dpkg-scanpackages --arch ${{ matrix.arch }} pool/ > dists/${{ matrix.codename }}/main/binary-${{ matrix.arch }}/Packages
            cat dists/${{ matrix.codename }}/main/binary-${{ matrix.arch }}/Packages | gzip -9 > dists/${{ matrix.codename }}/main/binary-${{ matrix.arch }}/Packages.gz
            pushd dists/${{ matrix.codename }}
              bash $repo/generate-release.sh ${{ matrix.codename }} > Release
              gpg --armour --sign --detach-sign -o Release.gpg Release
            popd
          popd

      - name: Generate html indexes
        run: |
          curl -o gen-indexes.py https://raw.githubusercontent.com/relrod/oneoff/master/generate-html-indexes.py
          find asl-pkgs > files-list.txt
          cat files-list.txt
          cat files-list.txt | python3 gen-indexes.py .
          tree .

      - name: Wait some time so that we don't clash with other matrix runs
        run: |
          sleep ${{ matrix.sleep }}

      - name: "Deploy it ğŸš€"
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          folder: asl-pkgs
          # keep old versions around
          clean: false

  deb-test:
    name: Ensure Debian repository is usable
    needs: deb
    runs-on: ubuntu-latest
    timeout-minutes: 15
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: armv7l
            cpu: cortex-a7
            base_image: raspios_lite:latest
    steps:
      - uses: pguyot/arm-runner-action@v2
        with:
          base_image: ${{ matrix.base_image }}
          cpu: ${{ matrix.cpu }}
          commands: |
            curl -o /etc/apt/trusted.gpg.d/ai5a-asl.asc \
              https://raw.githubusercontent.com/AI5A/asl-pkgs/main/pkg_pub_key.asc

            echo "deb [signed-by=/etc/apt/trusted.gpg.d/ai5a-asl.asc] https://ai5a.github.io/asl-pkgs/deb/ $(grep VERSION_CODENAME /etc/os-release | cut -d= -f2) main" \
              > /etc/apt/sources.list.d/ai5a-asl.list

            apt-get update
            apt-get install -y asl-asterisk
